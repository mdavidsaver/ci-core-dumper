name: Test ci-core-dumper

on: [push, pull_request]

jobs:
  native:
    runs-on: ${{ matrix.os }}
    name: Crash Test ${{ matrix.os }} / ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.x']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Builder Info
        shell: bash
        run: |
          which python
          python --version
      - uses: ./
        with:
          extra_gdb: "info auto-load"
      - name: Test
        shell: bash
        run: |
          python -m pip install setuptools
          python build_crasher.py
          python -m ci_core_dumper exec python test_crasher.py
          ulimit -c unlimited
          python test_crasher.py

  docker:
    runs-on: ubuntu-latest
    name: Docker ${{ matrix.piparch }} / ${{ matrix.pyver }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - pyver: cp27-cp27m
            piparch: manylinux1_x86_64

          - pyver: cp310-cp310
            piparch: manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v3
      - uses: ./
      - name: Docker
        run: |
          # can't use GHA native docker support since GHA magic binaries need .so absent from old manylinux images :(
          cat <<EOF > runit.sh
          #!/bin/sh
          set -e -x
          ls -d /opt/python
          cd /io
          export PATH="/opt/python/${{ matrix.pyver }}/bin:\$PATH"
          which python
          yum -y install gdb

          python -m pip install -U pip
          python -m pip install setuptools

          python build_crasher.py
          python -m ci_core_dumper exec python test_crasher.py

          EOF
          cat runit.sh
          chmod +x runit.sh
          docker pull quay.io/pypa/${{ matrix.piparch }}
          docker run --privileged --rm -v `pwd`:/io quay.io/pypa/${{ matrix.piparch }} ${{ matrix.pre }} /io/runit.sh
